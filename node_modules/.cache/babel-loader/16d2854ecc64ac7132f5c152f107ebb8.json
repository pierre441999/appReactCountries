{"ast":null,"code":"var _jsxFileName = \"/Users/pierrebusson/Documents/react/appreact copie/src/components/Temperature.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Temperature(_ref) {\n  _s();\n\n  let {\n    cityProps\n  } = _ref;\n  const [temperature, setTemperature] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [localtime, setLocaltime] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  console.log({\n    cityProps\n  });\n\n  const getWeatherData = _ref2 => {\n    let {\n      cityProps\n    } = _ref2;\n    axios({\n      method: \"GET\",\n      url: `http://api.weatherapi.com/v1/current.json?key=a8660573d5c14568bb9164457211712&q=${cityProps}`\n    }).then(response => {\n      setTemperature(response.data.current.temp_c);\n      setCondition(response.data.current.condition.text);\n      setIcon(response.data.current.condition.icon);\n      setLocaltime(response.data.location.localtime);\n    }).catch(error => {\n      console.log(error);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: localtime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [condition, /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"icon\",\n          src: icon.replace('//', 'https://')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getWeatherData({\n      cityProps\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Temperature, \"gnxCFN0c0HLXPSsO2BXoGmCrx44=\");\n\n_c = Temperature;\nexport default Temperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temperature\");","map":{"version":3,"sources":["/Users/pierrebusson/Documents/react/appreact copie/src/components/Temperature.js"],"names":["React","useState","axios","Temperature","cityProps","temperature","setTemperature","condition","setCondition","localtime","setLocaltime","icon","setIcon","console","log","getWeatherData","method","url","then","response","data","current","temp_c","text","location","catch","error","replace"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,OAAkC;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAE9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACJY,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACV,IAAAA;AAAD,GAAZ;;AACE,QAAMW,cAAc,GAAG,SAAiB;AAAA,QAAhB;AAACX,MAAAA;AAAD,KAAgB;AACtCF,IAAAA,KAAK,CAAC;AACJc,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAG,mFAAkFb,SAAU;AAF9F,KAAD,CAAL,CAIGc,IAJH,CAISC,QAAD,IAAc;AAClBb,MAAAA,cAAc,CAACa,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,MAAvB,CAAd;AACAd,MAAAA,YAAY,CAACW,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBd,SAAtB,CAAgCgB,IAAjC,CAAZ;AACAX,MAAAA,OAAO,CAACO,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBd,SAAtB,CAAgCI,IAAjC,CAAP;AACAD,MAAAA,YAAY,CAACS,QAAQ,CAACC,IAAT,CAAcI,QAAd,CAAuBf,SAAxB,CAAZ;AAED,KAVH,EAWGgB,KAXH,CAWUC,KAAD,IAAW;AAChBb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,KAbH;AAcA,wBAEI;AAAA,8BACA;AAAA,kBAAIjB;AAAJ;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,mBAAIJ,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,mBAAIE,SAAJ,eAAc;AAAK,UAAA,GAAG,EAAC,MAAT;AAAgB,UAAA,GAAG,EAAEI,IAAI,CAACgB,OAAL,CAAa,IAAb,EAAkB,UAAlB;AAArB;AAAA;AAAA;AAAA;AAAA,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAQD,GAvBD;;AAyBA,sBACE;AAAA,cAEKZ,cAAc,CAAC;AAACX,MAAAA;AAAD,KAAD;AAFnB;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzCQD,W;;KAAAA,W;AA4CT,eAAeA,WAAf","sourcesContent":["import React, {useState} from \"react\";\n\nimport axios from \"axios\";\n\nfunction Temperature({cityProps}) {\n  \n    const [temperature, setTemperature] = useState(\"\");\n    const [condition, setCondition] = useState(\"\");\n    const [localtime, setLocaltime] = useState(\"\");\n    const [icon, setIcon] = useState(\"\");\nconsole.log({cityProps})\n  const getWeatherData = ({cityProps}) => {\n    axios({\n      method: \"GET\",\n      url: `http://api.weatherapi.com/v1/current.json?key=a8660573d5c14568bb9164457211712&q=${cityProps}`,\n    })\n      .then((response) => {\n        setTemperature(response.data.current.temp_c);\n        setCondition(response.data.current.condition.text)\n        setIcon(response.data.current.condition.icon);\n        setLocaltime(response.data.location.localtime)\n        \n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return (\n        \n        <div>\n        <p>{localtime}</p>\n        <p>{temperature}Â°C</p>\n        <p>{condition}<img alt=\"icon\" src={icon.replace('//','https://')} /></p>\n        </div>\n    )\n  };\n\n  return (\n    <div>\n\n        {getWeatherData({cityProps})}\n        \n        \n    </div>\n\n  );\n}\n\n\nexport default Temperature;"]},"metadata":{},"sourceType":"module"}
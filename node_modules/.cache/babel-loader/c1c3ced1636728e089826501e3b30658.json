{"ast":null,"code":"var _jsxFileName = \"/Users/pierrebusson/Documents/react/appreact/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { Layout, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useState } from \"react\";\nimport { UserOutlined } from '@ant-design/icons';\nimport Page from \"./Page\";\nimport Login from \"./Login\"; // On a u-ne liste qui s'appelle labels\n// Dans cette liste, on a besoin de récupérer pour chaque label, la clé et le titre pour pouvoir générer le contenu\n// <Menu>\n//    <Menu.Item></Menu.Item>\n//    <Menu.Item></Menu.Item>\n//</Menu>\n// Je parcours labels\n// labels.map(label=>createMenu(label))\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [state, setstate] = useState({\n    keys: \"\"\n  });\n\n  const handleClick = event => {\n    setstate({ ...state,\n      key: event.key\n    });\n    console.log(event.key);\n  };\n\n  const labels = [{\n    key: \"I1\",\n    action: () => handleClick( /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Item 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 36\n    }, this)),\n    title: \"Item 1\",\n    component: /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Item 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)\n  }, {\n    key: \"I2\",\n    action: () => handleClick( /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Item 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 36\n    }, this)),\n    title: \"Item 2\",\n    component: /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Item 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)\n  }, {\n    key: \"connexion\",\n    action: () => handleClick( /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 36\n    }, this)),\n    title: \"Connexion\",\n    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Layout.Header, {\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      mode: \"horizontal\",\n      defaultSelectedKeys: [\"I1\"],\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: event => handleClick(event),\n        children: \"Item 1\"\n      }, \"I1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: event => console.log(event.key),\n        children: \"Item 2\"\n      }, \"I2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: event => console.log(event.key),\n        children: [/*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), \" Connexion\"]\n      }, \"connexion\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"jngLra7FKDFx/VIlpApwkv29D3w=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/pierrebusson/Documents/react/appreact/src/components/Navbar.js"],"names":["Layout","Menu","useState","UserOutlined","Page","Login","Navbar","state","setstate","keys","handleClick","event","key","console","log","labels","action","title","component","icon"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BH,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWK,MAAAA,GAAG,EAAED,KAAK,CAACC;AAAtB,KAAD,CAAR;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,GAAlB;AACD,GAHD;;AAKA,QAAMG,MAAM,GAAG,CACb;AACIH,IAAAA,GAAG,EAAG,IADV;AAEII,IAAAA,MAAM,EAAG,MAAMN,WAAW,eAAC,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAD,CAF9B;AAGIO,IAAAA,KAAK,EAAG,QAHZ;AAIIC,IAAAA,SAAS,eAAG,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJhB,GADa,EAQb;AACIN,IAAAA,GAAG,EAAG,IADV;AAEII,IAAAA,MAAM,EAAG,MAAMN,WAAW,eAAC,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAD,CAF9B;AAGIO,IAAAA,KAAK,EAAG,QAHZ;AAIIC,IAAAA,SAAS,eAAG,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJhB,GARa,EAcb;AACIN,IAAAA,GAAG,EAAG,WADV;AAEII,IAAAA,MAAM,EAAG,MAAMN,WAAW,eAAC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAD,CAF9B;AAGIO,IAAAA,KAAK,EAAG,WAHZ;AAIIE,IAAAA,IAAI,eAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJX,GAda,CAAf;AAqBA,sBACE,QAAC,MAAD,CAAQ,MAAR;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,mBAAmB,EAAE,CAAC,IAAD,CAA7C;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAEE,QAAA,OAAO,EAAGR,KAAD,IAAWD,WAAW,CAACC,KAAD,CAFjC;AAAA;AAAA,SACM,IADN;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,IAAD,CAAM,IAAN;AAEE,QAAA,OAAO,EAAGA,KAAD,IAAWE,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,GAAlB,CAFtB;AAAA;AAAA,SACM,IADN;AAAA;AAAA;AAAA;AAAA,cARF,eAcE,QAAC,IAAD,CAAM,IAAN;AAEE,QAAA,OAAO,EAAGD,KAAD,IAAWE,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,GAAlB,CAFtB;AAAA,gCAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SACM,WADN;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAtDD;;GAAMN,M;;KAAAA,M;AAuDN,eAAeA,MAAf","sourcesContent":["import { Layout, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useState } from \"react\";\nimport {UserOutlined} from '@ant-design/icons';\nimport Page from \"./Page\";\nimport Login from \"./Login\";\n// On a u-ne liste qui s'appelle labels\n// Dans cette liste, on a besoin de récupérer pour chaque label, la clé et le titre pour pouvoir générer le contenu\n// <Menu>\n//    <Menu.Item></Menu.Item>\n//    <Menu.Item></Menu.Item>\n//</Menu>\n// Je parcours labels\n// labels.map(label=>createMenu(label))\nconst Navbar = () => {\n  const [state, setstate] = useState({ keys: \"\" });\n\n  const handleClick = (event) => {\n      setstate({...state, key: event.key});\n    console.log(event.key);\n  };\n\n  const labels = [\n    {\n        key : \"I1\",\n        action : () => handleClick(<Page title=\"Item 1\"/>),\n        title : \"Item 1\",\n        component : <Page title=\"Item 1\"/>\n    },\n\n    {\n        key : \"I2\",\n        action : () => handleClick(<Page title=\"Item 2\"/>),\n        title : \"Item 2\",\n        component : <Page title=\"Item 2\"/>\n    },\n    {\n        key : \"connexion\",\n        action : () => handleClick(<Login/>),\n        title : \"Connexion\",\n        icon : <UserOutlined/>\n    },\n  ];\n  return (\n    <Layout.Header>\n      <Menu mode=\"horizontal\" defaultSelectedKeys={[\"I1\"]}>\n        <Menu.Item\n          key=\"I1\"\n          onClick={(event) => handleClick(event)}\n        >\n          Item 1\n        </Menu.Item>\n\n        <Menu.Item\n          key=\"I2\"\n          onClick={(event) => console.log(event.key)}\n        >\n          Item 2\n        </Menu.Item>\n        <Menu.Item\n          key=\"connexion\"\n          onClick={(event) => console.log(event.key)}\n        >\n          <UserOutlined/> Connexion\n        </Menu.Item>\n      </Menu>\n    </Layout.Header>\n  );\n}\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}
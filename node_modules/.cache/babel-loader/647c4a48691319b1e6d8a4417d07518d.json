{"ast":null,"code":"import _slicedToArray from\"/Users/pierrebusson/Documents/react/appreact copie/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Temperature(_ref){var cityProps=_ref.cityProps;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),temperature=_useState2[0],setTemperature=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),condition=_useState4[0],setCondition=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),localtime=_useState6[0],setLocaltime=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),icon=_useState8[0],setIcon=_useState8[1];console.log({cityProps:cityProps});var getWeatherData=function getWeatherData(_ref2){var cityProps=_ref2.cityProps;axios({method:\"GET\",url:\"http://api.weatherapi.com/v1/current.json?key=a8660573d5c14568bb9164457211712&q=\".concat(cityProps)}).then(function(response){setTemperature(response.data.current.temp_c);setCondition(response.data.current.condition.text);setIcon(response.data.current.condition.icon);setLocaltime(response.data.location.localtime);}).catch(function(error){console.log(error);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:localtime}),/*#__PURE__*/_jsxs(\"p\",{children:[temperature,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[condition,/*#__PURE__*/_jsx(\"img\",{alt:\"icon\",src:icon.replace('//','https://')})]})]});};return/*#__PURE__*/_jsx(\"div\",{children:getWeatherData({cityProps:cityProps})});}export default Temperature;","map":{"version":3,"sources":["/Users/pierrebusson/Documents/react/appreact copie/src/components/Temperature.js"],"names":["React","useState","axios","Temperature","cityProps","temperature","setTemperature","condition","setCondition","localtime","setLocaltime","icon","setIcon","console","log","getWeatherData","method","url","then","response","data","current","temp_c","text","location","catch","error","replace"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,WAAT,MAAkC,IAAZC,CAAAA,SAAY,MAAZA,SAAY,CAE9B,cAAsCH,QAAQ,CAAC,EAAD,CAA9C,wCAAOI,WAAP,eAAoBC,cAApB,eACA,eAAkCL,QAAQ,CAAC,EAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eACA,eAAkCP,QAAQ,CAAC,EAAD,CAA1C,yCAAOQ,SAAP,eAAkBC,YAAlB,eACA,eAAwBT,QAAQ,CAAC,EAAD,CAAhC,yCAAOU,IAAP,eAAaC,OAAb,eACJC,OAAO,CAACC,GAAR,CAAY,CAACV,SAAS,CAATA,SAAD,CAAZ,EACE,GAAMW,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,OAAiB,IAAfX,CAAAA,SAAe,OAAfA,SAAe,CACtCF,KAAK,CAAC,CACJc,MAAM,CAAE,KADJ,CAEJC,GAAG,2FAAqFb,SAArF,CAFC,CAAD,CAAL,CAIGc,IAJH,CAIQ,SAACC,QAAD,CAAc,CAClBb,cAAc,CAACa,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,MAAvB,CAAd,CACAd,YAAY,CAACW,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBd,SAAtB,CAAgCgB,IAAjC,CAAZ,CACAX,OAAO,CAACO,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBd,SAAtB,CAAgCI,IAAjC,CAAP,CACAD,YAAY,CAACS,QAAQ,CAACC,IAAT,CAAcI,QAAd,CAAuBf,SAAxB,CAAZ,CAED,CAVH,EAWGgB,KAXH,CAWS,SAACC,KAAD,CAAW,CAChBb,OAAO,CAACC,GAAR,CAAYY,KAAZ,EACD,CAbH,EAcA,mBAEI,oCACA,mBAAIjB,SAAJ,EADA,cAEA,qBAAIJ,WAAJ,WAFA,cAGA,qBAAIE,SAAJ,cAAc,YAAK,GAAG,CAAC,MAAT,CAAgB,GAAG,CAAEI,IAAI,CAACgB,OAAL,CAAa,IAAb,CAAkB,UAAlB,CAArB,EAAd,GAHA,GAFJ,CAQD,CAvBD,CAyBA,mBACE,qBAEKZ,cAAc,CAAC,CAACX,SAAS,CAATA,SAAD,CAAD,CAFnB,EADF,CASD,CAGD,cAAeD,CAAAA,WAAf","sourcesContent":["import React, {useState} from \"react\";\n\nimport axios from \"axios\";\n\nfunction Temperature({cityProps}) {\n  \n    const [temperature, setTemperature] = useState(\"\");\n    const [condition, setCondition] = useState(\"\");\n    const [localtime, setLocaltime] = useState(\"\");\n    const [icon, setIcon] = useState(\"\");\nconsole.log({cityProps})\n  const getWeatherData = ({cityProps}) => {\n    axios({\n      method: \"GET\",\n      url: `http://api.weatherapi.com/v1/current.json?key=a8660573d5c14568bb9164457211712&q=${cityProps}`,\n    })\n      .then((response) => {\n        setTemperature(response.data.current.temp_c);\n        setCondition(response.data.current.condition.text)\n        setIcon(response.data.current.condition.icon);\n        setLocaltime(response.data.location.localtime)\n        \n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return (\n        \n        <div>\n        <p>{localtime}</p>\n        <p>{temperature}Â°C</p>\n        <p>{condition}<img alt=\"icon\" src={icon.replace('//','https://')} /></p>\n        </div>\n    )\n  };\n\n  return (\n    <div>\n\n        {getWeatherData({cityProps})}\n        \n        \n    </div>\n\n  );\n}\n\n\nexport default Temperature;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/pierrebusson/Documents/react/appreact/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { Layout, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useState } from \"react\";\nimport { UserOutlined } from '@ant-design/icons';\nimport Page from \"./Page\";\nimport Login from \"./Login\"; // On a u-ne liste qui s'appelle labels\n// Dans cette liste, on a besoin de récupérer pour chaque label, la clé et le titre pour pouvoir générer le contenu\n// <Menu>\n//    <Menu.Item></Menu.Item>\n//    <Menu.Item></Menu.Item>\n//</Menu>\n// Je parcours labels\n// labels.map(label=>createMenu(label))\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  // const [state, setstate] = useState({ keys: \"\" });\n  // const handleClick = (event) => {\n  //      setstate({...state, key: event.key});\n  //         console.log(event.key);\n  //     };\n  const [state, setstate] = useState();\n\n  const handleClick = component => {\n    setstate(component);\n  };\n\n  const labels = [{\n    key: \"I1\",\n    action: () => handleClick( /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Item 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }, this)),\n    title: \"Item 1\" //   component : <Page title=\"Item 1\"/>\n\n  }, {\n    key: \"I2\",\n    action: () => handleClick( /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Item 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 36\n    }, this)),\n    title: \"Item 2\" //   component : <Page title=\"Item 2\"/>\n\n  }, {\n    key: \"connexion\",\n    action: () => handleClick( /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 36\n    }, this)),\n    title: \"Connexion\",\n    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this)\n  }];\n\n  const createMenuItem = label => {\n    return /*#__PURE__*/_jsxDEV(Menu.item, {\n      onClick: label.action,\n      children: [label.icon, \" \", label.title]\n    }, label.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout.Header, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      mode: \"horizontal\",\n      defaultSelectedKeys: [\"I1\"],\n      children: labels.map(label => createMenuItem(label))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), state]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"ccYQnxo/l9Mv8ymUdmAqihjqwSI=\");\n\n_c = Navbar;\nexport default Navbar;\n/* <Layout.Header>\n<Menu mode=\"horizontal\" defaultSelectedKeys={[\"I1\"]}>\n  <Menu.Item\n    key=\"I1\"\n    onClick={(event) => handleClick(event)}\n  >\n    Item 1\n  </Menu.Item>\n\n  <Menu.Item\n    key=\"I2\"\n    onClick={(event) => console.log(event.key)}\n  >\n    Item 2\n  </Menu.Item>\n  <Menu.Item\n    key=\"connexion\"\n    onClick={(event) => console.log(event.key)}\n  >\n    <UserOutlined/> Connexion\n  </Menu.Item>\n</Menu>\n</Layout.Header> */\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/pierrebusson/Documents/react/appreact/src/components/Navbar.js"],"names":["Layout","Menu","useState","UserOutlined","Page","Login","Navbar","state","setstate","handleClick","component","labels","key","action","title","icon","createMenuItem","label","map"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAGrB;AAEA;AACA;AACA;AACA;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;;AAEA,QAAMO,WAAW,GAAIC,SAAD,IAAe;AAC/BF,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACH,GAFD;;AAKA,QAAMC,MAAM,GAAG,CACb;AACIC,IAAAA,GAAG,EAAG,IADV;AAEIC,IAAAA,MAAM,EAAG,MAAMJ,WAAW,eAAC,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAD,CAF9B;AAGIK,IAAAA,KAAK,EAAG,QAHZ,CAIC;;AAJD,GADa,EAQb;AACIF,IAAAA,GAAG,EAAG,IADV;AAEIC,IAAAA,MAAM,EAAG,MAAMJ,WAAW,eAAC,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAD,CAF9B;AAGIK,IAAAA,KAAK,EAAG,QAHZ,CAIC;;AAJD,GARa,EAcb;AACIF,IAAAA,GAAG,EAAG,WADV;AAEIC,IAAAA,MAAM,EAAG,MAAMJ,WAAW,eAAC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAD,CAF9B;AAGIK,IAAAA,KAAK,EAAG,WAHZ;AAIIC,IAAAA,IAAI,eAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJX,GAda,CAAf;;AAsBA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,wBACI,QAAC,IAAD,CAAM,IAAN;AAA6B,MAAA,OAAO,EAAEA,KAAK,CAACJ,MAA5C;AAAA,iBACKI,KAAK,CAACF,IADX,OACkBE,KAAK,CAACH,KADxB;AAAA,OAAkBG,KAAK,CAACL,GAAxB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAQA,sBACE,QAAC,MAAD,CAAQ,MAAR;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,mBAAmB,EAAE,CAAC,IAAD,CAA7C;AAAA,gBACGD,MAAM,CAACO,GAAP,CAAYD,KAAD,IAAWD,cAAc,CAACC,KAAD,CAApC;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAIKV,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvDD;;GAAMD,M;;KAAAA,M;AAwDN,eAAeA,MAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Layout, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useState } from \"react\";\nimport {UserOutlined} from '@ant-design/icons';\nimport Page from \"./Page\";\nimport Login from \"./Login\";\n// On a u-ne liste qui s'appelle labels\n// Dans cette liste, on a besoin de récupérer pour chaque label, la clé et le titre pour pouvoir générer le contenu\n// <Menu>\n//    <Menu.Item></Menu.Item>\n//    <Menu.Item></Menu.Item>\n//</Menu>\n// Je parcours labels\n// labels.map(label=>createMenu(label))\nconst Navbar = () => {\n\n  \n// const [state, setstate] = useState({ keys: \"\" });\n      \n// const handleClick = (event) => {\n//      setstate({...state, key: event.key});\n//         console.log(event.key);\n//     };\n  const [state, setstate] = useState();\n\n  const handleClick = (component) => {\n      setstate(component)\n  };\n\n    \n  const labels = [\n    {\n        key : \"I1\",\n        action : () => handleClick(<Page title=\"Item 1\"/>),\n        title : \"Item 1\",\n     //   component : <Page title=\"Item 1\"/>\n    },\n\n    {\n        key : \"I2\",\n        action : () => handleClick(<Page title=\"Item 2\"/>),\n        title : \"Item 2\",\n     //   component : <Page title=\"Item 2\"/>\n    },\n    {\n        key : \"connexion\",\n        action : () => handleClick(<Login/>),\n        title : \"Connexion\",\n        icon : <UserOutlined/>\n    },\n  ];\n\n  const createMenuItem = (label) => {\n      return(\n          <Menu.item key = {label.key} onClick={label.action}>\n              {label.icon} {label.title}\n          </Menu.item>\n      );\n  }\n\n  return (\n    <Layout.Header>\n      <Menu mode=\"horizontal\" defaultSelectedKeys={[\"I1\"]}>\n        {labels.map((label) => createMenuItem(label))}\n        </Menu>\n        {state}\n    </Layout.Header>\n\n);\n}\nexport default Navbar;\n\n\n/* <Layout.Header>\n<Menu mode=\"horizontal\" defaultSelectedKeys={[\"I1\"]}>\n  <Menu.Item\n    key=\"I1\"\n    onClick={(event) => handleClick(event)}\n  >\n    Item 1\n  </Menu.Item>\n\n  <Menu.Item\n    key=\"I2\"\n    onClick={(event) => console.log(event.key)}\n  >\n    Item 2\n  </Menu.Item>\n  <Menu.Item\n    key=\"connexion\"\n    onClick={(event) => console.log(event.key)}\n  >\n    <UserOutlined/> Connexion\n  </Menu.Item>\n</Menu>\n</Layout.Header> */\n"]},"metadata":{},"sourceType":"module"}
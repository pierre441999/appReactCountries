{"ast":null,"code":"var _jsxFileName = \"/Users/pierrebusson/Documents/react/appreact/src/components/Profile.js\";\nimport { Form, Input, message, Button } from \"antd\";\nimport { createUserWithEmailAndPassword, getAuth } from \"@firebase/auth\";\nimport { initializeApp } from \"@firebase/app\";\nimport { firebaseConfig } from \"../base\";\nimport { useState } from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseApp = initializeApp(firebaseConfig);\nconst auth = getAuth(firebaseApp);\n\nconst Profile = () => {\n  const [loading, setLoading] = useState[false];\n  const inputLabels = [{\n    label: \"Prénom\",\n    name: \"firstName\",\n    required: \"true\",\n    message: \"Veuillez saisir vote prénom\",\n    type: \"text\"\n  }, {\n    label: \"Âge\",\n    name: \"age\",\n    required: \"true\",\n    message: \"Veuillez saisir vote âge\",\n    type: \"number\"\n  }, {\n    label: \"Email\",\n    name: \"email\",\n    required: \"true\",\n    message: \"Veuillez saisir vote email\",\n    type: \"email\"\n  }, {\n    label: \"Mot De PAsse\",\n    name: \"password\",\n    required: \"true\",\n    message: \"Veuillez saisir vote mot de passe\",\n    type: \"password\"\n  }];\n\n  const createInputLabels = label => {\n    return /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: label.label,\n      name: label.name,\n      rules: [{\n        required: label.required,\n        message: label.message\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: label.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, label.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onFinish = values => {\n    //Récupérer le pass et le mail dans values et la passer à la\n    // methode signInWithEmailAndPassword\n    setLoading( /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this));\n    createUserWithEmailAndPassword(auth, values.email, values.password).then(credentials => {\n      console.log(credentials);\n      message.success(\"Vous êtes bien inscrit\");\n      setLoading(false); // props.setActiveComponent(<Dashboard />);\n    }).catch(err => {\n      setLoading(false);\n      message.error(err.message);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    layout: \"vertical\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    autoComplete: \"off\",\n    children: inputLabels.map(label => createInputLabels(label))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/pierrebusson/Documents/react/appreact/src/components/Profile.js"],"names":["Form","Input","message","Button","createUserWithEmailAndPassword","getAuth","initializeApp","firebaseConfig","useState","LoadingOutlined","firebaseApp","auth","Profile","loading","setLoading","inputLabels","label","name","required","type","createInputLabels","onFinish","values","email","password","then","credentials","console","log","success","catch","err","error","onFinishFailed","errorInfo","map"],"mappings":"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","sourcesContent":["import { Form, Input, message, Button } from \"antd\";\nimport { createUserWithEmailAndPassword, getAuth } from \"@firebase/auth\";\nimport { initializeApp } from \"@firebase/app\";\nimport { firebaseConfig } from \"../base\";\nimport { useState } from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst auth = getAuth(firebaseApp);\n\nconst Profile = () => {\n  const [loading, setLoading] = useState[false];\n  const inputLabels = [\n    {\n      label: \"Prénom\",\n      name: \"firstName\",\n      required: \"true\",\n      message: \"Veuillez saisir vote prénom\",\n      type: \"text\",\n    },\n    {\n      label: \"Âge\",\n      name: \"age\",\n      required: \"true\",\n      message: \"Veuillez saisir vote âge\",\n      type: \"number\",\n    },\n    {\n      label: \"Email\",\n      name: \"email\",\n      required: \"true\",\n      message: \"Veuillez saisir vote email\",\n      type: \"email\",\n    },\n    {\n      label: \"Mot De PAsse\",\n      name: \"password\",\n      required: \"true\",\n      message: \"Veuillez saisir vote mot de passe\",\n      type: \"password\",\n    },\n  ];\n\n  const createInputLabels = (label) => {\n    return (\n      <Form.Item\n        key={label.name}\n        label={label.label}\n        name={label.name}\n        rules={[\n          {\n            required: label.required,\n            message: label.message,\n          },\n        ]}\n      >\n        <Input type={label.type} />\n      </Form.Item>\n    );\n  };\n  const onFinish = (values) => {\n    //Récupérer le pass et le mail dans values et la passer à la\n    // methode signInWithEmailAndPassword\n    setLoading(<LoadingOutlined />);\n    createUserWithEmailAndPassword(auth, values.email, values.password)\n      .then((credentials) => {\n        console.log(credentials);\n        message.success(\"Vous êtes bien inscrit\");\n        setLoading(false);\n        // props.setActiveComponent(<Dashboard />);\n      })\n      .catch((err) => {\n        setLoading(false);\n        message.error(err.message);\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return (\n    <Form\n      name=\"basic\"\n      layout=\"vertical\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n    >\n      {inputLabels.map((label) => createInputLabels(label))}\n    </Form>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}